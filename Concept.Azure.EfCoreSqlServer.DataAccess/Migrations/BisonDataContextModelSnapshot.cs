// <auto-generated />
using System;
using Concept.Azure.EfCoreSqlServer.DataAccess.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Concept.Azure.EfCoreSqlServer.DataAccess.Migrations
{
    [DbContext(typeof(BisonDataContext))]
    partial class BisonDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Concept.Azure.EfCoreSqlServer.DataAccess.Model.AggressionLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AggressionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AggressionLevel");
                });

            modelBuilder.Entity("Concept.Azure.EfCoreSqlServer.DataAccess.Model.BiomeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BiomeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BiomeCategory");
                });

            modelBuilder.Entity("Concept.Azure.EfCoreSqlServer.DataAccess.Model.Bison", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("AggressionLevelId")
                        .HasColumnType("int");

                    b.Property<Guid?>("BiomeRefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AggressionLevelId");

                    b.HasIndex("BiomeRefId");

                    b.ToTable("Bison");
                });

            modelBuilder.Entity("Concept.Azure.EfCoreSqlServer.DataAccess.Model.Bison", b =>
                {
                    b.HasOne("Concept.Azure.EfCoreSqlServer.DataAccess.Model.AggressionLevel", "AggressionLevel")
                        .WithMany()
                        .HasForeignKey("AggressionLevelId");

                    b.HasOne("Concept.Azure.EfCoreSqlServer.DataAccess.Model.BiomeCategory", "BiomeCategory")
                        .WithMany()
                        .HasForeignKey("BiomeRefId");

                    b.Navigation("AggressionLevel");

                    b.Navigation("BiomeCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
